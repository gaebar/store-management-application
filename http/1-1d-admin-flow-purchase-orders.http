
### Authenticate as Admin and save token

POST http://localhost:8080/api/v1/auth/authenticate
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "adminPassword"
}

> {%
    client.assert(response.body.token, "Token is not generated");
    client.global.set("auth-token", response.body.token);
%}

### Create Store 1 (Kirkland Megastore) and save store id in global variable
POST http://localhost:8080/admin/createStore
Content-Type: application/json
Authorization: Bearer {{auth-token}}

{
  "name": "Sammamish Megastore",
  "location": "123 Red Street, Sammamish, WA 98074",
  "contactInformation": "Telephone Number: 1234567890",
  "storeType": "retail",
  "openingDate": "2021-10-01"
}

> {%
    client.assert(response.body.id, "Store 1 is not generated");
    client.global.set("store1-id", response.body.id);
%}

### Get Store by Id
GET http://localhost:8080/stores/getStore/{{store1-id}}
Content-Type: application/json
Authorization: Bearer {{auth-token}}

> {%
    client.assert(response.body.id, "Store is not found");
%}


### Create Category 1 (Beauty) and save category id in global variable
POST http://localhost:8080/api/categories/create
Content-Type: application/json
Authorization: Bearer {{auth-token}}

{
  "name": "Beauty",
  "supplier": "Baci Cosmetics"
}

> {%
    client.global.set("category1-id", response.body.id);
    client.assert(response.body.name, "Beauty");
%}

### Create Item 1 (Lipstick)
POST http://localhost:8080/api/items/create
Content-Type: application/json
Authorization: Bearer {{auth-token}}

{
  "name": "Lipstick",
  "description": "Matte finish, long-lasting",
  "itemCategory": "{{category1-id}}",
  "price": 20.0,
  "quantity": 50,
  "initialQuantity": 50
}

> {%
    client.global.set("lipstick-id", response.body.id);
    client.assert(response.body.name, "Item is not created")
%}


### Create Order as Admin for Sammamish Megastore
POST http://localhost:8080/api/orders/create
Content-Type: application/json
Authorization: Bearer {{auth-token}}

{
    "status": "CREATED",
    "store": {{store1-id}}
}

> {%
    client.assert(response.body.id, "Order is not created");
    client.global.set("order1-id", response.body.id);
%}

### Get Order by Id
GET http://localhost:8080/api/orders/{{order1-id}}
Content-Type: application/json
Authorization: Bearer {{auth-token}}

> {%
    client.assert(response.body.id, "Order is not found");
%}


### Delete Order 1
DELETE http://localhost:8080/api/orders/delete/{{order1-id}}
Content-Type: application/json
Authorization: Bearer {{auth-token}}

### Delete Category 1
DELETE http://localhost:8080/api/categories/delete/{{category1-id}}
Content-Type: application/json
Authorization: Bearer {{auth-token}}

### Delete Item 1
DELETE http://localhost:8080/api/items/delete/{{lipstick-id}}
Content-Type: application/json
Authorization: Bearer {{auth-token}}

### Delete Store 1
DELETE http://localhost:8080/admin/deleteStore/{{store1-id}}
Content-Type: application/json
Authorization: Bearer {{auth-token}}



