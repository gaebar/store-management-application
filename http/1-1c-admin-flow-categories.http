# Super Admin login flow

POST http://localhost:8080/api/v1/auth/authenticate
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "adminPassword"
}

> {%
    client.assert(response.body.token, "Token is not generated");
    client.global.set("auth-token", response.body.token);
%}

### Create Category
POST http://localhost:8080/api/v1/categories/create
Content-Type: application/json
Authorization: Bearer {{auth-token}}

{
  "name": "Technology",
  "supplier": "Tech Inc"
}

> {%
    client.assert(response.body.id, "Category is not created");
    client.assert(response.body.name == "Technology", "Category name is not correct");
    client.assert(response.body.supplier == "Tech Inc", "Category supplier is not correct");
    client.global.set("itemCategory1-id", response.body.id);
%}

### Update Category
PUT http://localhost:8080/api/v1/categories/update/{{itemCategory1-id}}
Content-Type: application/json
Authorization: Bearer {{auth-token}}

{
  "name": "Electronics",
  "supplier": "Tech Inc"
}

> {%
    client.assert(response.body.name == "Electronics", "Category name is not correct");
    client.assert(response.body.supplier == "Tech Inc", "Category supplier is not correct");
%}

### Get Category by ID
GET http://localhost:8080/api/v1/categories/{{itemCategory1-id}}
Content-Type: application/json
Authorization: Bearer {{auth-token}}

> {%
    client.assert(response.body.name == "Electronics");
%}


### Create Category
POST http://localhost:8080/api/v1/categories/create
Content-Type: application/json
Authorization: Bearer {{auth-token}}

{
  "name": "Beauty",
  "supplier": "Baci and Abbracci"
}

> {%
    client.global.set("itemCategory2-id", response.body.id);
%}

### Create Item
POST http://localhost:8080/api/v1/items/create
Content-Type: application/json
Authorization: Bearer {{auth-token}}

{
  "name": "iPhone 15",
  "description": "Apple iPhone 15",
  "itemCategory": "{{category2-id}}",
  "price": 1199.99,
  "quantity": 20,
  "initialQuantity": 20
}


> {%
    client.global.set("item-id", response.body.id);
%}

### Get Item by ID
GET http://localhost:8080/api/v1/items/{{item-id}}
Content-Type: application/json
Authorization: Bearer {{auth-token}}

> {%
    client.assert(response.body.name == "iPhone 15");
%}

### Add Item to Category
PUT http://localhost:8080/api/v1/items/addToCategory/{{item-id}}/{{itemCategory1-id}}
Content-Type: application/json
Authorization: Bearer {{auth-token}}

### Delete Item by ID
DELETE http://localhost:8080/api/v1/items/delete/{{item-id}}
Content-Type: application/json
Authorization: Bearer {{auth-token}}

> {%
    client.assert(response.status == 200);
%}

### Delete Category 1
DELETE http://localhost:8080/api/v1/categories/delete/{{itemCategory1-id}}
Content-Type: application/json
Authorization: Bearer {{auth-token}}

> {%
    client.assert(response.status == 200);
%}

### Delete Category 2
DELETE http://localhost:8080/api/v1/categories/delete/{{itemCategory2-id}}
Content-Type: application/json
Authorization: Bearer {{auth-token}}

> {%
    client.assert(response.status == 200);
%}